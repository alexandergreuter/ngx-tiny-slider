{"version":3,"file":"ngx-tiny-slider.js","sources":["ng://ngx-tiny-slider/lib/ngx-tiny-slider.service.ts","ng://ngx-tiny-slider/lib/ngx-tiny-slider.component.ts","ng://ngx-tiny-slider/lib/ngx-tiny-slider.module.ts","ng://ngx-tiny-slider/public_api.ts","ng://ngx-tiny-slider/ngx-tiny-slider.ts"],"sourcesContent":["import {ElementRef, Injectable} from '@angular/core';\nimport {tns} from 'tiny-slider/src/tiny-slider';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTinySliderService {\n\n  constructor() {\n  }\n\n  initSlider(config, elementRef: ElementRef) {\n    const extendConfig = Object.assign({container: elementRef.nativeElement}, config);\n    return tns(extendConfig);\n  }\n\n  getDefaultConfig() {\n    return {\n      items: 3,\n      mode: 'carousel',\n      controlsPosition: 'bottom',\n      speed: 400\n    };\n  }\n}\n","import {Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\n\nimport {Subject} from 'rxjs';\nimport {first, takeWhile} from 'rxjs/operators';\n\nimport {NgxTinySliderService} from './ngx-tiny-slider.service';\nimport {NgxTinySliderSettingsInterface} from './interfaces/ngx-tiny-slider-settings.interface';\n\n@Component({\n  selector: 'ngx-tiny-slider',\n  templateUrl: 'ngx-tiny-slider.component.html',\n  styleUrls: ['ngx-tiny-slider.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxTinySliderComponent implements OnInit, OnDestroy {\n  @Input() config: NgxTinySliderSettingsInterface = {};\n  @ViewChild('slideItems', { static: true }) slideItemsContainerRef;\n\n  public sliderInstance;\n  private aliveObservable = true;\n\n  public domReady = new Subject();\n  private defaultConfig = this.ngxTinySliderService.getDefaultConfig();\n\n  constructor(private ngxTinySliderService: NgxTinySliderService) {\n  }\n\n  ngOnInit() {\n    if (this.config) {\n      this.extendConfig();\n    }\n\n    if (this.config.waitForDom) {\n      this.listenForDomReady();\n    } else {\n      this.initSlider();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.config.waitForDom) {\n      this.aliveObservable = false;\n    }\n\n    if (this.sliderInstance && this.sliderInstance.destroy) {\n      this.sliderInstance.destroy();\n    }\n  }\n\n  private listenForDomReady() {\n    this.domReady\n      .pipe(\n        first(),\n        takeWhile(() => this.aliveObservable)\n      )\n      .subscribe(() => this.initSlider());\n  }\n\n  private extendConfig() {\n    Object.keys(this.config).forEach(i => this.defaultConfig[i] = this.config[i]);\n  }\n\n  private initSlider() {\n    this.sliderInstance = this.ngxTinySliderService.initSlider(this.defaultConfig, this.slideItemsContainerRef);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgxTinySliderComponent} from './ngx-tiny-slider.component';\nimport {NgxTinySliderService} from './ngx-tiny-slider.service';\n\n@NgModule({\n    imports: [\n      CommonModule\n    ],\n    declarations: [\n        NgxTinySliderComponent\n    ],\n    providers: [\n        NgxTinySliderService\n    ],\n    exports: [\n        NgxTinySliderComponent\n    ]\n})\nexport class NgxTinySliderModule {\n}\n","/*\n * Public API Surface of ngx-tiny-slider\n */\n\nexport * from './lib/ngx-tiny-slider.module';\nexport * from './lib/ngx-tiny-slider.service';\nexport * from './lib/ngx-tiny-slider.component';\nexport * from './lib/interfaces/ngx-tiny-slider-settings.interface';\nexport * from './lib/interfaces/ngx-tiny-slider-instanse.interface';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}